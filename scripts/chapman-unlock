#!/usr/bin/env python
"""Usage:
        chapman-unlock <config> [options]

Recover jobs that are 'busy' on dead workers

Options:
  -h --help                 show this help message and exit
"""

import os
import time
import socket
import logging
from datetime import datetime

from docopt import docopt
from pyramid.paster import bootstrap

log = None

def main(args):
    from chapman import model as M
    chan = M.Message.channel.new_channel()
    workers = get_live_workers(chan)
    workers.append(M.Message.missing_worker)
    q = M.Message.m.find(
        { 's.status': {'$in': [ 'busy', 'q1', 'q2' ] },
          's.w': { '$nin': workers } })
    for msg in q:
        log.info('Unlock message %s', msg)
        msg.unlock()

def get_live_workers(chan):
    workers = []
    @chan.sub('pong')
    def save_pongs(chan, msg):
        worker = msg['data']['worker']
        workers.append(worker)
        log.info('... %s', worker)
    log.info('Sending ping...')
    chan.pub('ping', {'ts_ping': datetime.utcnow(),
                      'worker': '*' } )
    for x in range(10):
        time.sleep(0.1)
        chan.handle_ready(raise_errors=True, await=True)
    log.info('Waited long enough, unlocking messages now....')
    return workers

if __name__ == '__main__':
    args = docopt(__doc__)
    logging.config.fileConfig(
        args['<config>'],
        defaults=dict(here=os.getcwd()))
    log = logging.getLogger('chapmand')
    log.info('Begin bootstrap')
    bootstrap(args['<config>'], options=dict(noweb='true'))
    log.info('Bootstrap complete')
    main(args)
